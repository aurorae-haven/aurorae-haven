# File: .github/workflows/build-refresh-format.yml
name: Build, Format & Refresh Lockfile

on:
  workflow_dispatch: {}

permissions:
  contents: write # needed to push commits

concurrency:
  group: build-refresh-format-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Refresh lockfile, run Prettier, and build
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout repo
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      # 2) Setup Node.js and cache npm
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Display Node & npm versions
        run: |
          node -v
          npm -v

      # 3) Refresh package-lock.json (update to latest allowed versions)
      - name: Refresh package-lock.json
        run: npm install --package-lock-only

      # 4) Install deps according to the (possibly updated) lockfile
      - name: Clean install from lockfile
        run: npm ci

      # 5) Run Prettier to auto-fix formatting issues
      - name: Run Prettier formatting
        run: |
          npx prettier --write .

      # 6) Commit changes if Prettier or lockfile modified files
      - name: Commit updated files
        id: commit
        run: |
          if ! git diff --quiet; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add -A
            git commit -m "chore: format code & refresh package-lock.json (run ${{ github.run_id }})"
            echo "changed=true" >> "$GITHUB_OUTPUT"
          else
            echo "No changes to commit"
            echo "changed=false" >> "$GITHUB_OUTPUT"
          fi

      # 7) Run the build
      - name: Build project
        run: npm run build

      # 8) Push changes if there was a commit
      - name: Push changes
        if: steps.commit.outputs.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD:${{ github.ref_name }}
