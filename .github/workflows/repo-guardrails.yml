name: Repository Guardrails

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

concurrency:
  group: guardrails-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect:
    name: Detect configuration
    runs-on: ubuntu-latest
    outputs:
      has_node: ${{ steps.check_node.outputs.exists }}
      has_pa11y: ${{ steps.check_pa11y.outputs.exists }}
    steps:
      - uses: actions/checkout@v4
      - id: check_node
        name: Check Node project
        run: |
          if [ -f package.json ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      - id: check_pa11y
        name: Check pa11yci.json present
        run: |
          if [ -f pa11yci.json ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

  meta-checks:
    name: Meta required files exist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Ensure copilot instructions present
        run: |
          test -f ".github/copilot-instructions.md" || (echo "Missing .github/copilot-instructions.md" && exit 1)
      - name: Ensure README guidelines present
        run: |
          test -f "README.md" || (echo "Missing README.md" && exit 1)
      - name: Ensure CONTRIBUTING present
        run: |
          test -f "CONTRIBUTING.md" || (echo "Missing CONTRIBUTING.md" && exit 1)

  markdown-links:
    name: Docs validate links
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: lycheeverse/lychee-action@v1
        with:
          args: --no-progress --verbose --timeout 20 --max-redirects 5 --retry 2 --exclude-mail ./
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  super-linter:
    name: Lint auto-detect
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: github/super-linter@v7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: true
          IGNORE_GENERATED_FILES: true
          DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}

  gitleaks:
    name: Secrets scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  node-security:
    name: Node security and tests
    runs-on: ubuntu-latest
    needs: [detect]
    if: ${{ needs.detect.outputs.has_node == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
      - name: Install
        run: npm ci --ignore-scripts
      - name: Audit production
        run: npm audit --audit-level=high --omit=dev || (echo "Review audit output above."; exit 1)
      - name: Test
        run: npm test --if-present --silent

  codeql:
    name: CodeQL auto language detect
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  a11y:
    name: Accessibility pa11y-ci
    runs-on: ubuntu-latest
    needs: [detect]
    if: ${{ needs.detect.outputs.has_pa11y == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
      - name: Install pa11y-ci
        run: npm i -g pa11y-ci http-server
      - name: Build if present
        run: |
          if npm run | grep -q ' build'; then npm run build; fi
      - name: Serve and test
        run: |
          set -e
          ROOT=dist
          [ -d build ] && ROOT=build
          [ -d public ] && ROOT=public
          nohup npx http-server "$ROOT" -p 8080 >/dev/null 2>&1 &
          sleep 2
          pa11y-ci

  summary:
    name: Summary status
    runs-on: ubuntu-latest
    needs: [detect, meta-checks, markdown-links, super-linter, gitleaks, node-security, codeql, a11y]
    if: always()
    steps:
      - name: Show job outcomes
        run: |
          echo "Detect ${{ needs.detect.result }}"
          echo "Meta ${{ needs.meta-checks.result }}"
          echo "Links ${{ needs.markdown-links.result }}"
          echo "Linter ${{ needs.super-linter.result }}"
          echo "Gitleaks ${{ needs.gitleaks.result }}"
          echo "Node ${{ needs.node-security.result }}"
          echo "CodeQL ${{ needs.codeql.result }}"
          echo "A11y ${{ needs.a11y.result }}"
